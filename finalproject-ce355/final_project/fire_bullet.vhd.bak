library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity fire_bullet is
    Port (
        clk : in std_logic;
        reset : in std_logic;
        ps2_scan_ready : in std_logic;
        ps2_scan_code : in std_logic_vector(7 downto 0);
        fire_bullet : out std_logic;
		  keyboard_clk : in std_logic;
        keyboard_data : in std_logic
    );
end fire_bullet;

architecture Behavioral of fire_bullet is
    signal fire_flag : std_logic := '0';
begin
    process(clk, reset)
    begin
        if reset = '1' then
            fire_flag <= '0';
        elsif rising_edge(clk) then
            if ps2_scan_ready = '1' then
                case ps2_scan_code is
                    when "00011101" => -- Key 'W'
                        fire_flag <= '1'; -- Set fire flag
                    when others =>
                        fire_flag <= '0'; -- Reset fire flag if no match
                end case;
            else
                fire_flag <= '0';
            end if;
        end if;
    end process;

    -- Output the fire signal
    fire_bullet <= fire_flag;
end Behavioral;
